---
author: 'Lennart Kolmodin <kolmodin@gmail.com>'
build-suggestions:
  - base >= 3.0 && < 5
  - bytestring >= 0.9
  - containers
  - array ghc-prim
build-type: Simple
cabal-version: '>= 1.8'
category: 'Data, Parsing'
cpp-options: -DGENERICS
description: |-
  Efficient, pure binary serialisation using lazy ByteStrings.
  Haskell values may be encoded to and from binary formats,
  written to disk as binary, or sent over the network.
  The format used can be automatically generated, or
  you can choose to implement a custom format if needed.
  Serialisation speeds of over 1 G\/sec have been observed,
  so this library should be suitable for high performance
  scenarios.
exposed-modules:
  - Data.Binary
  - Data.Binary.Put
  - Data.Binary.Get
  - Data.Binary.Get.Internal
  - Data.Binary.Builder
  - Data.Binary.Builder.Internal
extra-source-files: |-
  README.md index.html docs/hcar/binary-Lb.tex
  tools/derive/*.hs tests/Makefile benchmarks/Makefile 
  benchmarks/CBenchmark.h
ghc-options: -O2 -Wall -fliberate-case-threshold=1000
homepage: https://github.com/kolmodin/binary
hs-source-dirs: src
license: BSD3
license-file: LICENSE
location: git://github.com/kolmodin/binary.git
maintainer: 'Lennart Kolmodin, Don Stewart <dons00@gmail.com>'
name: binary
other-modules:
  - Data.Binary.Builder.Base
  - Data.Binary.Class Data.Binary.Generic
stability: provisional
synopsis: Binary serialisation for Haskell values using lazy ByteStrings
tested-with: 'GHC == 7.4.2, GHC == 7.6.3, GHC == 7.8.2'
type: git
version: 0.7.2.1
